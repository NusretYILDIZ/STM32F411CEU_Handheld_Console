#ifndef __inst_table_h
#define __inst_table_h

#define INST_TABLE(X)   X(0x00, syscall, imm) \
                        X(0x01,    lda8, imm) \
                        X(0x02,    lda8, abs) \
                        X(0x03,    lda8, abx) \
                        X(0x04,    lda8, aby) \
                        X(0x05,    lda8, ind) \
                        X(0x06,    lda8, idx) \
                        X(0x07,    lda8, idy) \
                        X(0x08,   lda16, imm) \
                        X(0x09,   lda16, abs) \
                        X(0x0a,   lda16, abx) \
                        X(0x0b,   lda16, aby) \
                        X(0x0c,   lda16, ind) \
                        X(0x0d,   lda16, idx) \
                        X(0x0e,   lda16, idy) \
                        X(0x0f,   lda32, imm) \
                        X(0x10,   lda32, abs) \
                        X(0x11,   lda32, abx) \
                        X(0x12,   lda32, aby) \
                        X(0x13,   lda32, ind) \
                        X(0x14,   lda32, idx) \
                        X(0x15,   lda32, idy) \
                        X(0x16,    sta8, imm) \
                        X(0x17,    sta8, abs) \
                        X(0x18,    sta8, abx) \
                        X(0x19,    sta8, aby) \
                        X(0x1a,    sta8, ind) \
                        X(0x1b,    sta8, idx) \
                        X(0x1c,    sta8, idy) \
                        X(0x1d,   sta16, imm) \
                        X(0x1e,   sta16, abs) \
                        X(0x1f,   sta16, abx) \
                        X(0x20,   sta16, aby) \
                        X(0x21,   sta16, ind) \
                        X(0x22,   sta16, idx) \
                        X(0x23,   sta16, idy) \
                        X(0x24,   sta32, imm) \
                        X(0x25,   sta32, abs) \
                        X(0x26,   sta32, abx) \
                        X(0x27,   sta32, aby) \
                        X(0x28,   sta32, ind) \
                        X(0x29,   sta32, idx) \
                        X(0x2a,   sta32, idy) \
						X(0x2b,    ldx8, imm) \
						X(0x2c,    ldx8, abs) \
						X(0x2d,    ldx8, aby) \
						X(0x2e,   ldx16, imm) \
						X(0x2f,   ldx16, abs) \
						X(0x30,   ldx16, aby) \
						X(0x31,   ldx32, imm) \
						X(0x32,   ldx32, abs) \
						X(0x33,   ldx32, aby) \
						X(0x34,    stx8, imm) \
						X(0x35,    stx8, abs) \
						X(0x36,    stx8, aby) \
						X(0x37,   stx16, imm) \
						X(0x38,   stx16, abs) \
						X(0x39,   stx16, aby) \
						X(0x3a,   stx32, imm) \
						X(0x3b,   stx32, abs) \
						X(0x3c,   stx32, aby) \
						X(0x3d,    ldy8, imm) \
						X(0x3e,    ldy8, abs) \
						X(0x3f,    ldy8, aby) \
						X(0x40,   ldy16, imm) \
						X(0x41,   ldy16, abs) \
						X(0x42,   ldy16, aby) \
						X(0x43,   ldy32, imm) \
						X(0x44,   ldy32, abs) \
						X(0x45,   ldy32, aby) \
						X(0x46,    sty8, imm) \
						X(0x47,    sty8, abs) \
						X(0x48,    sty8, aby) \
						X(0x49,   sty16, imm) \
						X(0x4a,   sty16, abs) \
						X(0x4b,   sty16, aby) \
						X(0x4c,   sty32, imm) \
						X(0x4d,   sty32, abs) \
						X(0x4e,   sty32, aby) \
						X(0x4f,    push, imm) \
						X(0x50,    push, abs) \
						X(0x51,    push, ind) \
						X(0x52,     pha, imp) \
						X(0x53,     phx, imp) \
						X(0x54,     phy, imp) \
						X(0x55,     pla, imp) \
						X(0x56,     plx, imp) \
						X(0x57,     ply, imp) \
						X(0x58,     clc, imp) \
						X(0x59,     sec, imp) \
						X(0x5a,     clf, imp) \
						X(0x5b,     sef, imp) \
						X(0x5c,     clv, imp) \
						X(0x5d,    itfa, imp) \
						X(0x5e,    itfx, imp) \
						X(0x5f,    itfy, imp) \
						X(0x60,    ftia, imp) \
						X(0x61,    ftix, imp) \
						X(0x62,    ftiy, imp) \
						X(0x63,     add, imm) \
						X(0x64,     add, abs) \
						X(0x65,     add, abx) \
						X(0x66,     add, aby) \
						X(0x67,     add, idx) \
						X(0x68,     add, idy) \
						X(0x69,     add, reg) \
						X(0x6a,     sub, imm) \
						X(0x6b,     sub, abs) \
						X(0x6c,     sub, abx) \
						X(0x6d,     sub, aby) \
						X(0x6e,     sub, idx) \
						X(0x6f,     sub, idy) \
						X(0x70,     sub, reg) \
						X(0x71,     mul, imm) \
						X(0x72,     mul, abs) \
						X(0x73,     mul, abx) \
						X(0x74,     mul, aby) \
						X(0x75,     mul, idx) \
						X(0x76,     mul, idy) \
						X(0x77,     mul, reg) \
						X(0x78,     div, imm) \
						X(0x79,     div, abs) \
						X(0x7a,     div, abx) \
						X(0x7b,     div, aby) \
						X(0x7c,     div, idx) \
						X(0x7d,     div, idy) \
						X(0x7e,     div, reg) \
						X(0x7f,     lsr, imp) \
						X(0x80,     lsr, abs) \
						X(0x81,     lsr, abx) \
						X(0x82,     lsr, aby) \
						X(0x83,     lsl, imp) \
						X(0x84,     lsl, abs) \
						X(0x85,     lsl, abx) \
						X(0x86,     lsl, aby) \
						X(0x87,     asr, imp) \
						X(0x88,     asr, abs) \
						X(0x89,     asr, abx) \
						X(0x8a,     asr, aby) \
						X(0x8b,     asl, imp) \
						X(0x8c,     asl, abs) \
						X(0x8d,     asl, abx) \
						X(0x8e,     asl, aby) \
						X(0x8f,     and, imm) \
						X(0x90,     and, abs) \
						X(0x91,     and, abx) \
						X(0x92,     and, aby) \
						X(0x93,     and, idx) \
						X(0x94,     and, idy) \
						X(0x95,     and, reg) \
						X(0x96,      or, imm) \
						X(0x97,      or, abs) \
						X(0x98,      or, abx) \
						X(0x99,      or, aby) \
						X(0x9a,      or, idx) \
						X(0x9b,      or, idy) \
						X(0x9c,      or, reg) \
						X(0x9d,     xor, imm) \
						X(0x9e,     xor, abs) \
						X(0x9f,     xor, abx) \
						X(0xa0,     xor, aby) \
						X(0xa1,     xor, idx) \
						X(0xa2,     xor, idy) \
						X(0xa3,     xor, reg) \
						X(0xa4,     not, imm) \
						X(0xa5,     not, abs) \
						X(0xa6,     not, abx) \
						X(0xa7,     not, aby) \
						X(0xa8,     not, idx) \
						X(0xa9,     not, idy) \
						X(0xaa,     not, reg) \
						X(0xab,     nga, imp) \
						X(0xac,     ngx, imp) \
						X(0xad,     ngy, imp) \
						X(0xae,     inc, imp) \
						X(0xaf,     inx, imp) \
						X(0xb0,     iny, imp) \
						X(0xb1,     dec, imp) \
						X(0xb2,     dex, imp) \
						X(0xb3,     dey, imp) \
						X(0xb4,     cmp, imm) \
						X(0xb5,     cmp, abs) \
						X(0xb6,     cmp, abx) \
						X(0xb7,     cmp, aby) \
						X(0xb8,     cmp, ind) \
						X(0xb9,     cmp, idx) \
						X(0xba,     cmp, idy) \
						X(0xbb,     cmp, reg) \
						X(0xbc,     cpx, imm) \
						X(0xbd,     cpx, abs) \
						X(0xbe,     cpy, imm) \
						X(0xbf,     cpy, abs) \
						X(0xc0,    test, imm) \
						X(0xc1,    test, abs) \
						X(0xc2,    test, abx) \
						X(0xc3,    test, aby) \
						X(0xc4,    test, ind) \
						X(0xc5,    test, idx) \
						X(0xc6,    test, idy) \
						X(0xc7,    test, reg) \
						X(0xc8,     bit, imm) \
						X(0xc9,     bit, abs) \
						X(0xca,     bit, abx) \
						X(0xcb,     bit, aby) \
						X(0xcc,     bit, ind) \
						X(0xcd,     bit, idx) \
						X(0xce,     bit, idy) \
						X(0xcf,     bit, reg) \
						X(0xd0,     mod, imm) \
						X(0xd1,     mod, abs) \
						X(0xd2,     mod, reg) \
						X(0xd3,     tax, imp) \
						X(0xd4,     tay, imp) \
						X(0xd5,     txa, imp) \
						X(0xd6,     tya, imp) \
						X(0xd7,     txy, imp) \
						X(0xd8,     tyx, imp) \
						X(0xd9,     jmp, abs) \
						X(0xda,     jmp, ind) \
						X(0xdb,      jz, abs) \
						X(0xdc,      jc, abs) \
						X(0xdd,      js, abs) \
						X(0xde,      jo, abs) \
						X(0xdf,     jnz, abs) \
						X(0xe0,     jnc, abs) \
						X(0xe1,     jns, abs) \
						X(0xe2,     jno, abs) \
						X(0xe3,      jg, abs) \
						X(0xe4,      jl, abs) \
						X(0xe5,     jge, abs) \
						X(0xe6,     jle, abs) \
						X(0xe7,      ja, abs) \
						X(0xe8,      jb, abs) \
						X(0xe9,     jae, abs) \
						X(0xea,     jbe, abs) \
						X(0xeb,      jf, abs) \
						X(0xec,     jnf, abs) \
						X(0xed,    loop, abs) \
						X(0xee,   loopz, abs) \
						X(0xef,  loopnz, abs) \
						X(0xf0,   jmpyz, abs) \
						X(0xf1,     phs, imp) \
						X(0xf2,     pls, imp)

#define INST_SWITCHCASE(opc, ins, add)  case opc: cpu_inst_##ins(cpu_addr##add); break;
static void cpu_execute_inst(unsigned char opcode)
{
	switch(opcode)
	{
		INST_TABLE(INST_SWITCHCASE)
	}
}
#undef INST_SWITCHCASE

#endif //__inst_table_h